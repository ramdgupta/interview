{"ast":null,"code":"var _jsxFileName = \"/home/ram/project/interview/specex/src/App.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from \"./components/Card\";\nimport Filter from \"./components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mainUrl = `https://api.spacexdata.com/v3/launches?limit=100`;\nconst yearFilter = `${mainUrl}?limit=100&launch_success=true&land_success=true&launch_year=`;\nconst launchTrue = `${mainUrl}?limit=100&launch_success=`;\nconst landTrue = `${mainUrl}?limit=100&land_success=`;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [launches, setLaunches] = useState([]);\n  const [url, setUrl] = useState([]);\n  const [isActive, setIsActive] = useState(false); //Fetch data function\n\n  const fetchYear = async () => {\n    console.log(launches);\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      let data = await response.json();\n      setLaunches(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }; //Fetch data at first laod\n\n\n  useEffect(() => {\n    setUrl(mainUrl);\n  }, []); //Fetch data at filter option\n\n  useEffect(() => {\n    fetchYear();\n  }, [url]); // Filter event listner\n\n  const filterYear = (e, stateValue) => {\n    let filterTag = e.target.dataset.filter;\n    let filterValue = e.target.dataset.value;\n    console.log(filterValue);\n    setIsActive(stateValue);\n\n    if (filterTag === 'year') {\n      setUrl(`${yearFilter}${filterValue}`);\n    }\n\n    if (filterTag === 'launch') {\n      setUrl(`${launchTrue}${filterValue}`);\n    }\n\n    if (filterTag === 'land') {\n      setUrl(`${landTrue}${filterValue}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Specex Launch Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filterYear: filterYear,\n      isActive: isActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content grid\",\n      children: launches.map((launch, index) => {\n        return /*#__PURE__*/_createElement(Card, { ...launch,\n          key: index,\n          count: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading grid\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"zrkb7GAwiI9XNhrkHPkoRS8VzfQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ram/project/interview/specex/src/App.js"],"names":["React","useState","useEffect","Card","Filter","mainUrl","yearFilter","launchTrue","landTrue","App","loading","setLoading","launches","setLaunches","url","setUrl","isActive","setIsActive","fetchYear","console","log","response","fetch","data","json","error","filterYear","e","stateValue","filterTag","target","dataset","filter","filterValue","value","map","launch","index"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Card from \"./components/Card\";\nimport Filter from \"./components/Filter\";\nconst mainUrl = `https://api.spacexdata.com/v3/launches?limit=100`\nconst yearFilter = `${mainUrl}?limit=100&launch_success=true&land_success=true&launch_year=`\nconst launchTrue = `${mainUrl}?limit=100&launch_success=`\nconst landTrue = `${mainUrl}?limit=100&land_success=`\n\nfunction App() {\n  const [loading, setLoading]= useState(true);\n  const [launches, setLaunches] = useState([]);\n  const [url, setUrl] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n\n  //Fetch data function\n  const fetchYear= async () => {\n\n    console.log(launches)\n    setLoading(true)\n    try {\n      const response = await fetch(url);\n      let data = await response.json();\n      setLaunches(data)\n      setLoading(false);\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n  //Fetch data at first laod\n  useEffect(() => {\n    setUrl(mainUrl)\n  }, [])\n  //Fetch data at filter option\n   useEffect(() => {\n    fetchYear();\n  },[url]) \n\n// Filter event listner\n  const filterYear = (e, stateValue) => {\n    let filterTag = e.target.dataset.filter;\n    let filterValue = e.target.dataset.value;\n    console.log(filterValue)\n    setIsActive(stateValue)\n    if(filterTag === 'year'){\n      setUrl(`${yearFilter}${filterValue}`)\n    }\n    if(filterTag === 'launch'){\n      setUrl(`${launchTrue}${filterValue}`)\n    }\n    if(filterTag === 'land'){\n      setUrl(`${landTrue}${filterValue}`)\n    }\n  } \n  return (\n    <>\n      <header className=\"App-header\">\n       <h1> Specex Launch Program</h1>\n      </header>\n        <Filter filterYear={filterYear} isActive={isActive}/>\n        <section className=\"content grid\">\n          {launches.map((launch, index)=>{\n            return(\n              <Card {...launch} key={index} count={index}/>\n            )\n          })}\n        </section>\n        {loading && <h2 className='loading grid'>Loading...</h2>}\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}